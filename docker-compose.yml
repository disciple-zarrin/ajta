version: '3.8'

services:
  db:
    restart: always
    image: "postgres:12.3-alpine"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - ajta_network

  redis:
    image: "redis:alpine"
    hostname: redis
    networks:
      - ajta_network

  celery:
    build:
      context: ./web
    restart: always
    entrypoint: /usr/src/app/celery-entrypoint.sh
    command: watchmedo auto-restart --recursive --pattern="*.py" --directory="/usr/src/app/ajta/" -- celery -A ajta worker --autoscale=${MAX_CONCURRENCY},${MIN_CONCURRENCY} -l INFO
    volumes:
      - ./web:/usr/src/app
      - github_repos:/usr/src/github
      - wordlist:/usr/src/wordlist
      - scan_results:/usr/src/scan_results
      - gf_patterns:/root/.gf
      - nuclei_templates:/root/nuclei-templates
      - tool_config:/root/.config
      - static_volume:/usr/src/app/staticfiles/
    environment:
      - DEBUG=0
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
    depends_on:
      - db
      - redis
    networks:
      - ajta_network

  celery-beat:
    build: ./web
    entrypoint: /usr/src/app/beat-entrypoint.sh
    command: celery -A ajta beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DEBUG=0
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
    depends_on:
      - celery
    volumes:
      - ./web:/usr/src/app
      - github_repos:/usr/src/github
      - wordlist:/usr/src/wordlist
      - scan_results:/usr/src/scan_results
      - gf_patterns:/root/.gf
      - nuclei_templates:/root/nuclei-templates
      - tool_config:/root/.config
    networks:
      - ajta_network

  web:
    build:
      context: ./web
    entrypoint: /usr/src/app/entrypoint.sh
    restart: always
    environment:
      - DEBUG=0
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=${POSTGRES_HOST}
      # THIS IS A MUST FOR CHECKING UPDATE, EVERYTIME A COMMIT IS MERGED INTO
      # MASTER, UPDATE THIS!!! MAJOR.MINOR.PATCH https://semver.org/
      - AJTA_CURRENT_VERSION='1.0.0'
    volumes:
      - ./web:/usr/src/app
      - github_repos:/usr/src/github
      - wordlist:/usr/src/wordlist
      - scan_results:/usr/src/scan_results
      - gf_patterns:/root/.gf
      - nuclei_templates:/root/nuclei-templates
      - tool_config:/root/.config
      - static_volume:/usr/src/app/staticfiles/
    ports:
      - "8000:8000"
    depends_on:
      - db
      - celery
      - celery-beat
    networks:
      ajta_network:
        aliases:
          - ajta

  tor:
    image: peterdavehello/tor-socks-proxy
    restart: always
    networks:
      - ajta_network
    depends_on:
      - web

  proxy:
    restart: always
    image: nginx:alpine
    ports:
      - 80:80/tcp
      - 443:443/tcp
    depends_on:
      - web
      - db
      - redis
    secrets:
      - source: proxy.ca
        target: /etc/nginx/certs/ajta_chain.pem
      - source: proxy.cert
        target: /etc/nginx/certs/ajta.pem
      - source: proxy.key
        target: /etc/nginx/certs/ajta_rsa.key
    volumes:
      - ./config/nginx/ajta.conf:/etc/nginx/conf.d/ajta.conf:ro
      - static_volume:/usr/src/app/staticfiles/
      - scan_results:/usr/src/scan_results
    networks:
      - ajta_network

networks:
  ajta_network:
    name : ajta_network

volumes:
  tool_config:
    name: tool_config
  postgres_data:
    name: postgres_data
  gf_patterns:
    name: gf_patterns
  nuclei_templates:
    name: nuclei_templates
  github_repos:
    name: github_repos
  wordlist:
    name: wordlist
  scan_results:
    name: scan_results
  static_volume:
    name: static_volume

secrets:
  proxy.ca:
    file: ./secrets/certs/ajta_chain.pem
  proxy.key:
    file: ./secrets/certs/ajta_rsa.key
  proxy.cert:
    file: ./secrets/certs/ajta.pem
